Variables
============
$blue: #0000ff;


Rules
======
Embedding
$baseClass: "something"

#{$baseClass}somethingelse // string concatenation

Structure
nav {
    font-size: etc
    ul {
        list-style etc
        li {
            float etc
        }
    }
}

Parent selector (&) to mix with Parent
a {
    text-decoration etc
    &:hover {
        text-decoration etc
    }
}

Nest properties 
.button {
    font: {
        family etc
        size etc
    }
}

Extend classes @extend
.button {
    etc
}
.submit-button {
    @extend a:hover; //extend a rule
    @extend .button; // multiple rules
    border etc
}

Mixins
 with or without parameters


@mixin rounded-corners-all($size){
        border-radius: $size;
        -webkit-border-radius: $size;
        -moz-border-radius: $size;
}
#form {
    @include rounded-corners-all(5 px);
}

or with default value

@mixin rounded-corners-all($size: 5px){
        border-radius: $size;
        -webkit-border-radius: $size;
        -moz-border-radius: $size;
}
#form {
    @include rounded-corners-all;
}

Functions
$appWidth: 900px;
@function column-width($cols){
    @return ($appWidth / $cols) - $cols* 5px;
}

.col2 {
    width:column-width(2);
}

.col3 {
    width:column-width(3);
}

@function center-width($gutter){
    @return $appWidth - $gutter*2;
}

Control directive
@if
@for
@each
@while
